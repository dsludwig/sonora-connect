version: 2
workflows:
  version: 2
  test:
    jobs:
      - build-sonora-images
      # - build-grpcweb-images
      - test-py38
      - test-py39
      - test-py310
      - test-conformance
      - lint
      - interop-grpcweb-wsgi:
          requires:
            - build-sonora-images
            # - build-grpcweb-images
      - interop-grpcweb-asgi:
          requires:
            - build-sonora-images
            # - build-grpcweb-images
jobs:
  build-sonora-images:
    docker:
      - image: cimg/base:stable
    parameters:
      docker_repo:
        type: string
        default: dludwig
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Build
          command: |
            docker compose build
            docker login --username=$DOCKER_HUB_USER --password=$DOCKER_HUB_PAT
            docker tag sonora-test-wsgi-server $DOCKER_HUB_USER/sonora-test-wsgi-server:$CIRCLE_SHA1
            docker push $DOCKER_HUB_USER/sonora-test-wsgi-server:$CIRCLE_SHA1
            docker tag sonora-test-asgi-server $DOCKER_HUB_USER/sonora-test-asgi-server:$CIRCLE_SHA1
            docker push $DOCKER_HUB_USER/sonora-test-asgi-server:$CIRCLE_SHA1
  build-grpcweb-images:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - run:
          name: Build
          command: |
            git clone https://github.com/grpc/grpc-web.git
            cd grpc-web
            git reset --hard ecb890429f20c7105c3e5c4300a680a495765d2b
            docker pull $DOCKER_HUB_USER/sonora-grpcweb-interop
            docker compose build prereqs node-interop-server interop-client
            docker login --username=$DOCKER_HUB_USER --password=$DOCKER_HUB_PAT
            docker tag grpcweb/prereqs $DOCKER_HUB_USER/sonora-grpcweb-interop:$CIRCLE_SHA1
            docker push $DOCKER_HUB_USER/sonora-grpcweb-interop:$CIRCLE_SHA1
  test-py38:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run: sudo apt-get install python3-dev libev-dev
      - run:
          command: curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.5.1 python -
          environment:
            POETRY_VERSION: 1.1.5
      - run: poetry install
      - restore_cache:
          key: benchmarks-{{ .Environment.CIRCLE_JOB }}-master
      - run: poetry run tox -- -e py38 -- --benchmark-save=${CIRCLE_BRANCH//[^-._a-zA-Z0-9]/-} --benchmark-compare
      - save_cache:
          key: benchmarks-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - .benchmarks
  test-py39:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run: sudo apt-get install python3-dev libev-dev
      - run:
          command: curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.5.1 python -
          environment:
            POETRY_VERSION: 1.1.5
      - run: poetry install
      - restore_cache:
          key: benchmarks-{{ .Environment.CIRCLE_JOB }}-master
      - run: poetry run tox -- -e py39 -- --benchmark-save=${CIRCLE_BRANCH//[^-._a-zA-Z0-9]/-} --benchmark-compare
      - save_cache:
          key: benchmarks-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - .benchmarks
  test-py310:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run: sudo apt-get install python3-dev libev-dev
      - run:
          command: curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.5.1 python -
          environment:
            POETRY_VERSION: 1.1.5
      - run: poetry install
      - restore_cache:
          key: benchmarks-{{ .Environment.CIRCLE_JOB }}-master
      - run: poetry run tox -- -e py310 -- --benchmark-save=${CIRCLE_BRANCH//[^-._a-zA-Z0-9]/-} --benchmark-compare
      - save_cache:
          key: benchmarks-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - .benchmarks
  test-conformance:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install python3-dev libev-dev
      - run:
          command: curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.5.1 PYENV_VERSION=system python -
          environment:
            POETRY_VERSION: 1.1.5
      - run:
          command: |
            mkdir -p $HOME/bin
            curl -sSL $CONNECTCONFORMANCE_URL | tar xfz - -C $HOME/bin
          environment:
            CONNECTCONFORMANCE_URL: https://github.com/connectrpc/conformance/releases/download/v1.0.4/connectconformance-v1.0.4-Linux-x86_64.tar.gz
      - run: poetry install
      - run: poetry run tox -- -e conformance
  interop-grpcweb-wsgi:
    docker:
      - image: public/sonora-grpcweb-interop
      - image: $DOCKER_HUB_USER/sonora-test-wsgi-server:$CIRCLE_SHA1
    steps:
      - run:
          command: /github/grpc-web/scripts/docker-run-interop-tests.sh
  interop-grpcweb-asgi:
    docker:
      - image: public/sonora-grpcweb-interop
      - image: $DOCKER_HUB_USER/sonora-test-asgi-server:$CIRCLE_SHA1
    steps:
      - run:
          command: /github/grpc-web/scripts/docker-run-interop-tests.sh
  lint:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run: sudo pip install tox
      - run: tox -e black
